<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on JackyLove的小窝</title>
    <link>https://www.jackylove.me/tags/golang/</link>
    <description>Recent content in Golang on JackyLove的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Aug 2019 23:14:08 +0800</lastBuildDate>
    
	<atom:link href="https://www.jackylove.me/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go的并发</title>
      <link>https://www.jackylove.me/post/go%E7%9A%84%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Thu, 15 Aug 2019 23:14:08 +0800</pubDate>
      
      <guid>https://www.jackylove.me/post/go%E7%9A%84%E5%B9%B6%E5%8F%91/</guid>
      <description>Go的并发 Go被称为21世纪的C语言，Go的语法和C类似都很简单，Go从语言层面就支持并行，这也是Go语言的一大特色。 goroutine goroutine是</description>
    </item>
    
    <item>
      <title>Go中的面向对象和接口</title>
      <link>https://www.jackylove.me/post/go%E4%B8%AD%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Thu, 15 Aug 2019 15:08:22 +0800</pubDate>
      
      <guid>https://www.jackylove.me/post/go%E4%B8%AD%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%8E%A5%E5%8F%A3/</guid>
      <description>Go中的面向对象和接口 严格来讲，go中并没有传统的面向对象的严格语法，但是可以通过组合来实现。 前一篇Go的博文中，我们提到了struct，我</description>
    </item>
    
    <item>
      <title>简单的Go</title>
      <link>https://www.jackylove.me/post/%E7%AE%80%E5%8D%95%E7%9A%84go/</link>
      <pubDate>Wed, 14 Aug 2019 16:29:59 +0800</pubDate>
      
      <guid>https://www.jackylove.me/post/%E7%AE%80%E5%8D%95%E7%9A%84go/</guid>
      <description>21世纪的C语言 Go语言作为google团队开发的一门编译型语言，具有高效开发效率和运行效率，深受国内程序员的喜欢，被誉为“21世纪的C语言</description>
    </item>
    
  </channel>
</rss>